# Just runs docs from docs/test, simulates mvn setup
name: Docs only build

on:
  workflow_call:
    inputs:
      profile:
        required: true
        type: string
        description: the full csv maven profile
      sparkVersion:
        required: false
        type: string
        description: Spark version to use
      sparkScalaVersion:
        required: false
        type: string
        description: Spark scala version to use
      hadoopVersion:
        required: false
        type: string
        description: Hadoop version to use
      jdk:
        required: false
        type: string
        description: jdk version to use
      mvnCliOpts:
        required: false
        type: string
        description: mvn cli opts
      mvnOpts:
        required: false
        type: string
        description: used to set MAVEN_OPTS

jobs:
  site:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.2
        with:
          submodules: recursive
      - uses: sparkutils/spark-maven-action@main
        with:
          title: Building site against maven profile for version - ${{ inputs.profile }}
          sparkVersion: ${{ inputs.sparkVersion }}
          sparkScalaVersion: ${{ inputs.sparkScalaVersion }}
          hadoopVersion: ${{ inputs.hadoopVersion }}
          jdk: ${{ inputs.jdk }}
          mvnOpts: ${{ inputs.mvnOpts }}
          mvnCliOpts: ${{ inputs.mvnCliOpts }}
          # bare bones for site setup
          script: |
            echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -P ${{ inputs.profile }}) > version.txt
      - uses: sparkutils/mkdocs-action@main
        with:
          # save the previous version coverage and mvn site
          copyFromScript: |
            version=$(cat version.txt)
            mkdir site_safety_box
            if [ ! -f "$version/coverage.txt" ]; then
              echo "Using simulated coverage.txt"
              echo 86.30 > site_safety_box/coverage.txt
              echo 76.04 >> site_safety_box/coverage.txt
            else
              echo "Copying coverage"
              cp $version/coverage.txt site_safety_box/
            fi
            cp site_safety_box/coverage.txt .
            if [ -d "$version/site" ]; then
              echo "Copying site"
              cp -rf $version/site site_safety_box/
            else
              echo "Could not find site"
            fi
          # copy back the files
          copyToScript: |
            echo "Copying coverage.txt to docs"
            cp coverage.txt docs/
            if [ -d "site_safety_box/site" ]; then
              echo "Copying site to docs"
              cp -rf site_safety_box/site docs/
            fi
