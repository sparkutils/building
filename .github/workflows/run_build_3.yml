name: Runs maven and spark setup in a matrix

on:
  workflow_call:
    inputs:
      testString:
        required: true
        type: string
        description: theTestString test or -DskipTests
      theMatrix:
        required: true
        type: string
        description: the json matrix to build against - there should be no spaces or illegal path symbols in the profile names
      storeTarget:
        required: false
        type: string
        description: location of maven target on the matrix build be upload-artifact?
      additionalShellCommand:
        required: false
        type: string
        description: run extra commands on the shell, must be a .sh file location without the extension
      sparkVersion:
        required: false
        type: string
        description: Spark version to use
      sparkScalaVersion:
        required: false
        type: string
        description: Spark scala version to use
      hadoopVersion:
        required: false
        type: string
        description: Hadoop version to use
      jdk:
        required: false
        type: string
        description: jdk version to use
      mvnCliOpts:
        required: false
        type: string
        description: mvn cli opts
      mvnOpts:
        required: false
        type: string
        description: used to set MAVEN_OPTS
    secrets:
      MAVEN_GPG_PRIVATE_KEY:
        required: false
      CENTRAL_USERNAME:
        required: false
      CENTRAL_TOKEN:
        required: false
      MAVEN_GPG_PASSPHRASE:
        required: false

jobs:
  theRun:
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(inputs.theMatrix) }}

    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '~docsOnly') != true
    steps:
      - uses: actions/checkout@v4.1.2
        with:
          submodules: recursive
      - uses: sparkutils/spark-maven-action@main
        with:
          title: Build ${{ matrix.profile }},${{ matrix.scala }},${{ matrix.third }} with ${{ inputs.testString }}
          script: |
            export MAVEN_OPTS="${{ inputs.mvnOpts }}"
            if [ "${{ github.event_name }}" == "pull_request" ]; then
              echo Skipping GPG from PR
              SKIP_GPG="-Dgpg.skip"
            else
              echo Running GPG
              SKIP_GPG=""
            fi
            mvn ${{ inputs.mvnCliOpts }} clean ${{ inputs.testString }} $SKIP_GPG install -P ${{ matrix.profile }},${{ matrix.scala }},${{ matrix.third }}
          gpgKey: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          storeTarget: ${{ inputs.storeTarget }}
          storeTargetName: ${{ matrix.profile }}___${{ matrix.scala }}
          additionalShellCommand: ${{ inputs.additionalShellCommand }}.sh ${{ matrix.profile }},${{ matrix.scala }}
          sparkVersion: ${{ inputs.sparkVersion }}
          sparkScalaVersion: ${{ inputs.sparkScalaVersion }}
          hadoopVersion: ${{ inputs.hadoopVersion }}
          jdk: ${{ inputs.jdk }}
        env:
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
